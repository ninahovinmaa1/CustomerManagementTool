[{"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\index.js":"1","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\App.js":"2","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\LoginPage.jsx":"3","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerListPage.jsx":"4","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\components\\CustomerListItem.jsx":"5","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerDetailPage.jsx":"6","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerCreatePage.jsx":"7","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerUpdatePage.jsx":"8","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\styles\\ButtonStyles.jsx":"9"},{"size":332,"mtime":1610561013809,"results":"10","hashOfConfig":"11"},{"size":1814,"mtime":1610808780635,"results":"12","hashOfConfig":"11"},{"size":1972,"mtime":1610803676096,"results":"13","hashOfConfig":"11"},{"size":1248,"mtime":1610717732482,"results":"14","hashOfConfig":"11"},{"size":351,"mtime":1610633603754,"results":"15","hashOfConfig":"11"},{"size":4004,"mtime":1610809410480,"results":"16","hashOfConfig":"11"},{"size":2324,"mtime":1610803756976,"results":"17","hashOfConfig":"11"},{"size":2887,"mtime":1610802992331,"results":"18","hashOfConfig":"11"},{"size":327,"mtime":1610809283285,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fzgda4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\index.js",[],["42","43"],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\App.js",[],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\LoginPage.jsx",[],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerListPage.jsx",["44"],"import React, { useState, useEffect } from 'react';\r\nimport CustomerListItem from '../components/CustomerListItem';\r\n\r\nexport default function CustomerListPage() {\r\n    const [customerList, setCustomerList] = useState([])\r\n\r\n    //getCustomerList displays the list of customers once right after the page's initial rendering. \r\n    useEffect(() => {\r\n        getCustomerList()\r\n    }, [])\r\n\r\n    function getCustomerList() {\r\n        const url = \"https://frebi.willandskill.eu/api/v1/customers/\"\r\n        const token = localStorage.getItem(\"WEBB20\")\r\n        fetch(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCustomerList(data.results) //save data from api to customerList\r\n                console.log(customerList) //empty arr as no customers added yet\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*Display list of customers from array customerList*/}\r\n            {customerList.map((item) => {\r\n                return <CustomerListItem key={item.id} customerData={item} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\components\\CustomerListItem.jsx",[],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerDetailPage.jsx",["45","46"],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerCreatePage.jsx",[],"C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\pages\\CustomerUpdatePage.jsx",["47"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function CustomerUpdatePage(props) {\r\n    const customerId = props.match.params.id\r\n    const [formData, setFormData] = useState({})\r\n    const history = useHistory()\r\n\r\n    function getCustomerItem() {\r\n        const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n        const token = localStorage.getItem(\"WEBB20\")\r\n        fetch(url, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => setFormData(data)) //save data from api to customerList\r\n    }\r\n\r\n    useEffect(() => { getCustomerItem() }, [])\r\n\r\n    //tar innehållet från formuläret och populerar state var med det\r\n    function handleOnChange(e) {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        const newObj = { ...formData, [name]: value }\r\n        setFormData(newObj)\r\n    }\r\n\r\n    function renderInput(name, label, type) {\r\n        return (\r\n            <div>\r\n                <label>{label}</label>\r\n                <input\r\n                    type={type || \"text\"}\r\n                    name={name}\r\n                    value={formData[name] || \"\"}\r\n                    onChange={handleOnChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleOnSubmit(e) {\r\n        e.preventDefault()\r\n        const url = `https://frebi.willandskill.eu/api/v1/customers/${customerId}/`\r\n        const token = localStorage.getItem(\"WEBB20\")\r\n        fetch(url, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(() => history.push(`/customers/${customerId}`)) //navigate customer to the edited company\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Update Customer</h1>\r\n                <form onSubmit={handleOnSubmit}>\r\n                    {renderInput(\"name\", \"Customer Name\")}\r\n                    {renderInput(\"email\", \"Customer Email\", \"email\")}\r\n                    {renderInput(\"organisationNr\", \"Organisation Number\")}\r\n                    {renderInput(\"paymentTerm\", \"Payment Term\", \"number\")}\r\n                    {renderInput(\"phoneNumber\", \"Phone Number\", \"tel\")}\r\n                    {renderInput(\"reference\", \"Reference\")}\r\n                    {renderInput(\"vatNr\", \"Vat Number\")}\r\n                    {renderInput(\"website\", \"Website\", \"url\")}\r\n                    <button type=\"submit\">Update Customer</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n","C:\\Users\\Nina\\Desktop\\Nackademin\\Frontend3\\customer-management-tool\\src\\styles\\ButtonStyles.jsx",["48"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    padding: 1rem 1.5rem;\r\n`\r\nconst ButtonSecondary = styled(Button)`\r\n    background: lightgrey;\r\n`\r\n\r\nconst ButtonPrimary = styled(Button)`\r\n    background: lightblue;\r\n`\r\n\r\nexport { Button, ButtonSecondary, ButtonPrimary }",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":10,"column":8,"nodeType":"55","endLine":10,"endColumn":10,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":36,"column":44,"nodeType":"55","endLine":36,"endColumn":46,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":83,"column":41,"nodeType":"61","endLine":83,"endColumn":88},{"ruleId":"53","severity":1,"message":"57","line":22,"column":44,"nodeType":"55","endLine":22,"endColumn":46,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomerList'. Either include it or remove the dependency array.","ArrayExpression",["69"],"React Hook useEffect has a missing dependency: 'getCustomerItem'. Either include it or remove the dependency array.",["70"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["71"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"74","fix":"76"},"Update the dependencies array to be: [getCustomerList]",{"range":"77","text":"78"},"Update the dependencies array to be: [getCustomerItem]",{"range":"79","text":"80"},{"range":"81","text":"80"},[384,386],"[getCustomerList]",[1344,1346],"[getCustomerItem]",[812,814]]